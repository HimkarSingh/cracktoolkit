// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI tool to automatically detect fields in the uploaded image and create interactive fillable forms.
 *
 * - generateFillableForm - A function that handles the fillable form generation process.
 * - GenerateFillableFormInput - The input type for the generateFillableForm function.
 * - GenerateFillableFormOutput - The return type for the generateFillableForm function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFillableFormInputSchema = z.object({
  imageUri: z
    .string()
    .describe(
      'An image of a form, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // Corrected data URI description
    ),
});
export type GenerateFillableFormInput = z.infer<typeof GenerateFillableFormInputSchema>;

const GenerateFillableFormOutputSchema = z.object({
  formSchema: z
    .string()
    .describe('A JSON schema representing the fillable form with detected fields.'),
  instructions: z
    .string()
    .describe('Instructions on how to use the generated form schema.'),
});

export type GenerateFillableFormOutput = z.infer<typeof GenerateFillableFormOutputSchema>;

export async function generateFillableForm(
  input: GenerateFillableFormInput
): Promise<GenerateFillableFormOutput> {
  return generateFillableFormFlow(input);
}

const generateFillableFormPrompt = ai.definePrompt({
  name: 'generateFillableFormPrompt',
  input: {schema: GenerateFillableFormInputSchema},
  output: {schema: GenerateFillableFormOutputSchema},
  prompt: `You are an AI form generator. Analyze the uploaded image of the form and generate a JSON schema representing the fillable form fields.

  Image: {{media url=imageUri}}

  Consider various field types such as text fields, checkboxes, radio buttons, and dropdown menus.

  Provide instructions on how to use the generated form schema.
  Ensure that the generated JSON schema is well-structured and easy to understand.
  `,
});

const generateFillableFormFlow = ai.defineFlow(
  {
    name: 'generateFillableFormFlow',
    inputSchema: GenerateFillableFormInputSchema,
    outputSchema: GenerateFillableFormOutputSchema,
  },
  async input => {
    const {output} = await generateFillableFormPrompt(input);
    return output!;
  }
);
